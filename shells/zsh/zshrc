# Set the directory we want to store zinit and plugins
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# Download Zinit, if it's not there yet
if [ ! -d "$ZINIT_HOME" ]; then
   mkdir -p "$(dirname $ZINIT_HOME)"
   git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

# Source/Load zinit
source "${ZINIT_HOME}/zinit.zsh"

# Python Envirment
#VENV="$HOME/Documents/Scripts/.venv"
#source "$VENV/bin/activate"

# Term
export TERM=xterm-256color

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab

# Add in snippets
zinit snippet OMZL::git.zsh
zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::archlinux
zinit snippet OMZP::command-not-found

# Load completions
autoload -Uz compinit && compinit

zinit cdreplay -q

# Keybindings
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^[w' kill-region

# History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'
export PS1="%F{39}%Bó°£‡%b%f %1~: "
setopt prompt_subst
aws_prompt_info() { echo ""; }


# Aliases
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias ll='ls -lah'
alias la='ls -A'
alias l='ls -CF'
alias c='clear'
alias CH='ssh 208.85.0.1 -p 2222'
alias NULLR='ssh null-router.hivelocity.net'
alias dots='cd $HOME/.dots/'
alias work='tmuxinator start work'
alias works='tmuxinator stop work'
alias pystart='source ~/Documents/Scripts/.global_venv/bin/activate'
alias pystop='deactivate'
alias legacy-start='sudo docker start legacy-ssh'
alias legacy-connect='sudo docker exec -it legacy-ssh bash'
alias legacy-stop='sudo docker stop legacy-ssh'

# SSH Keychain (Optional if using Keychain for SSH agent)
if command -v keychain &>/dev/null; then
    eval "$(keychain --quiet --eval master noc)"
fi

# Shell integrations
eval "$(fzf --zsh)"
eval "$(zoxide init --cmd cd zsh)"
